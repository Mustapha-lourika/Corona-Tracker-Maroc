{"version":3,"sources":["components/Chart/Chart.module.css","images/corona.jpg","components/Cards/Cards.module.css","api/index.js","components/Cards/Cards.jsx","components/Chart/Chart.jsx","components/Footer/footer.jsx","components/CardT/Card.jsx","App.js","serviceWorker.js","index.js","components/CardT/Cards.module.css"],"names":["module","exports","covid","a","axios","get","features","data","modifierData2","map","dailyData","confirmed","attributes","Cas_confirmés","recovered","Retablis","deaths","Décédés","date","Date","console","log","covid2","modifierData3","negative","Negative_tests","modifierData4","filter","x","length","covidReg","RegionFr","RegionAr","Cases","Deaths","Recoveries","Cards","useState","dailyDataReg","setDailyDataReg","useEffect","fetchAPI","grid","reg","Grid","key","alignItems","item","component","Card","xs","md","className","cx","styles","card","infected","CardContent","Typography","paragraph","variant","rl","color","gutterBottom","start","end","duration","container","cols","spacing","justify","Chart","setDailyData","lineChart","labels","toLocaleDateString","datasets","label","borderColor","fill","backgroundColor","FooterPage","fluid","getFullYear","href","CardT","da","setDa","ar","separator","style","margin","App","state","country","src","imageCovid","alt","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3e90e3db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3_6hZ\"};","module.exports = __webpack_public_path__ + \"static/media/corona.184b1da2.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2IHwx\",\"card\":\"Cards_card__k7wFw\",\"infected\":\"Cards_infected__2XB4Q\",\"cols\":\"Cards_cols__2XIdv\",\"r\":\"Cards_r__37Ufl\",\"l\":\"Cards_l__1HSnd\",\"mr\":\"Cards_mr__3v8q1\",\"rl\":\"Cards_rl__R_e1e\",\"coun\":\"Cards_coun__2rB7d\"};","import axios from 'axios';\r\n\r\n    export  const  covid =async ()=>{\r\n        try{\r\n            const {data:{features}}=await axios.get(\"https://services3.arcgis.com/hjUMsSJ87zgoicvl/arcgis/rest/services/Covid_19/FeatureServer/5/query?where=1%3D1&outFields=*&outSR=4326&f=json\");\r\n            const modifierData2=features.map((dailyData)=>({\r\n                confirmed: dailyData.attributes.Cas_confirmés,\r\n                recovered: dailyData.attributes.Retablis,\r\n                deaths: dailyData.attributes.Décédés,\r\n                date: dailyData.attributes.Date,\r\n            }))\r\n            return modifierData2;\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n    \r\n}\r\nexport  const  covid2 =async ()=>{\r\n    try{\r\n        const {data:{features}}=await axios.get(\"https://services3.arcgis.com/hjUMsSJ87zgoicvl/arcgis/rest/services/Covid_19/FeatureServer/5/query?where=1%3D1&outFields=*&outSR=4326&f=json\");\r\n\r\n        const modifierData3=features.map((dailyData)=>({\r\n            confirmed: dailyData.attributes.Cas_confirmés,\r\n            recovered: dailyData.attributes.Retablis,\r\n            deaths: dailyData.attributes.Décédés,\r\n            date: dailyData.attributes.Date,\r\n            negative:dailyData.attributes.Negative_tests\r\n\r\n        }))\r\n      const   modifierData4=modifierData3.filter(x=>(x.confirmed && x.recovered && x.deaths && x.date && x.negative  ));\r\n        return modifierData4[modifierData4.length-1];\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n\r\n}\r\nexport  const  covidReg =async ()=>{\r\n    try{\r\n        const {data:{features}}=await axios.get(\"https://services3.arcgis.com/hjUMsSJ87zgoicvl/arcgis/rest/services/Covid_19/FeatureServer/7/query?where=1%3D1&outFields=OBJECTID_1,RegionFr,RegionAr,Cases,Deaths,Recoveries&outSR=4326&f=json\");\r\n        const modifierData3=features.map((dailyData)=>({\r\n            RegionFr: dailyData.attributes.RegionFr,\r\n            RegionAr: dailyData.attributes.RegionAr,\r\n            Cases:dailyData.attributes.Cases,\r\n            Deaths: dailyData.attributes.Deaths,\r\n            Recoveries: dailyData.attributes.Recoveries,\r\n        }))\r\n        return modifierData3;\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n\r\n}","import React, { useState,useEffect} from 'react';\r\nimport {Card,CardContent,Typography,Grid}  from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n  \r\nimport styles from './Cards.module.css';\r\nimport { covidReg } from '../../api';\r\nconst Cards=()=>{\r\n    const [dailyDataReg,setDailyDataReg]=useState([]); \r\n    useEffect(()=>{\r\n        const fetchAPI=async ()=>{\r\n           setDailyDataReg(await  covidReg());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n    console.log(\"daily\",dailyDataReg);\r\n    const grid=dailyDataReg.map((reg)=>\r\n\r\n        <Grid key={reg.RegionFr}  alignItems='center'  item component={Card} xs={12} md={3}  className={cx(styles.card,styles.infected)}>\r\n            <CardContent> \r\n\r\n<Typography paragraph\t  variant=\"h5\" className={styles.rl}  color=\"primary\" gutterBottom>   {reg.RegionAr} </Typography>\r\n<hr/>\r\n<Typography paragraph\t variant=\"h5\"   color='textPrimary' gutterBottom> \r\n\r\n  {reg.RegionFr}\r\n   </Typography>\r\n<hr/>\r\n\r\n\r\n             <Typography paragraph\t className={styles.rl}  variant=\"h5\">الحالات المؤكدة:\r\n             <CountUp start={0} end={reg.Cases}   duration={2} /> \r\n      </Typography>\r\n           \r\n             </CardContent>\r\n        \r\n         </Grid>\r\n\r\n    )\r\n\r\n  \r\nreturn (\r\n   \r\n    <div className={styles.container}>\r\n <div className={styles.cols}> \r\n           جدول توزيع الحالات حسب الجهات\r\n           </div>\r\n <Grid container spacing={3}   justify=\"center\">\r\n{grid}\r\n</Grid>\r\n</div>\r\n)\r\n}\r\nexport default Cards;","import React, { useState,useEffect} from 'react'\r\nimport { fetchDailyData,covid} from '../../api';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart=()=>{\r\n    const [dailyData,setDailyData]=useState([]); \r\n    useEffect(()=>{\r\n        const fetchAPI=async ()=>{\r\n           setDailyData(await  covid());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n    console.log(dailyData);\r\n\r\n\r\n    const lineChart=(\r\n        dailyData.length? ( <Line data={{\r\n            labels:dailyData.map(({date})=> new Date(date).toLocaleDateString('en-GB')),\r\n            datasets:[{\r\n                data:dailyData.map(({confirmed})=> confirmed),\r\n                label:'المصابون',\r\n                borderColor:'blue',\r\n                fill:true,\r\n\r\n            },{ \r\n                data:dailyData.map(({deaths})=> deaths),\r\n                label:'الوفيات',\r\n                borderColor:'red',\r\n                backgroundColor: 'rgba(255,0,0,0.5)',\r\n                fill:true,\r\n\r\n            },{ \r\n                data:dailyData.map(({recovered})=> recovered),\r\n                label:'المتعافون',\r\n                borderColor:'green',\r\n                fill:true,\r\n\r\n            }],\r\n        }}\r\n        />):null\r\n\r\n    );\r\n\r\nreturn (\r\n    <div className={styles.container}>\r\n{lineChart}\r\n</div>\r\n)\r\n}\r\nexport default Chart;","import React from \"react\";\r\nimport { MDBCol, MDBContainer, MDBFooter } from \"mdbreact\";\r\n\r\nconst FooterPage = () => {\r\n  return (\r\n    <MDBFooter color=\"blue\" className=\"font-small pt-4 mt-4\">\r\n     \r\n      <div className=\"footer-copyright text-center py-3\">\r\n        <MDBContainer  fluid>\r\n          <div className=\"foote\" >\r\n\r\n          &copy; {new Date().getFullYear()}  By: <a href=\"https://github.com/Mustapha-lourika\"> Mustapha Lourika </a>\r\n          </div>\r\n\r\n        </MDBContainer>\r\n      </div>\r\n    </MDBFooter>\r\n  );\r\n}\r\n\r\nexport default FooterPage;","import React , { useState,useEffect}from 'react';\r\nimport {Card,CardContent,Typography,Grid}  from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport { covid2 } from '../../api';\r\n  \r\nimport styles from './Cards.module.css';\r\nconst CardT=()=>{\r\n  \r\n    const [da,setDa]=useState({confirmed:0,recovered:0,deaths:0,negative:0,date:0}); \r\n    useEffect(()=>{\r\n        const fetchAPI=async ()=>{\r\n            setDa(await  covid2());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n    console.log(\"oooook\",da);\r\n \r\nreturn (\r\n    <div className={styles.container}>\r\n<Grid item container spacing={3}  justify=\"center\">\r\n<Grid  item   component={Card} md={4} xs={12} className={cx(styles.card,styles.infected)}>\r\n    <CardContent> \r\n        <Typography  variant=\"h5\"  className={styles.ar} color=\"primary\">الحالات المؤكدة</Typography>\r\n        <CountUp start={0} end={da.confirmed}   duration={2} separator=\" \"/> \r\n               <Typography color=\"textSecondary\">  آخر تحديث:{ new Date(da.date).toLocaleDateString('en-GB')} </Typography>\r\n               <Typography style={{color:'white'}}> ssssssssssssssssssssssssssssssssss </Typography>\r\n\r\n    </CardContent>\r\n\r\n</Grid>\r\n<Grid item component={Card}  md={4} xs={12}   className={cx(styles.card,styles.recovered)}>\r\n    <CardContent>\r\n        <Typography variant=\"h5\" color=\"primary\" className={styles.ar} >المتعافون</Typography>\r\n        <CountUp start={0} end={da.recovered} duration={2} separator=\" \"/> \r\n               <Typography color=\"textSecondary\"> آخر تحديث:  { new Date(da.date).toLocaleDateString('en-GB')} </Typography>\r\n               <Typography style={{color:'white'}}> sssssssssssssssss</Typography>\r\n\r\n    </CardContent>\r\n\r\n</Grid>\r\n<Grid item component={Card}  md={4} xs={12}  className={cx(styles.card,styles.deaths)}>\r\n    <CardContent>\r\n        <Typography variant=\"h5\" className={styles.ar}  color=\"primary\">الوفيات</Typography>\r\n        <CountUp start={0} end={da.deaths} duration={2} separator=\" \"/> \r\n               <Typography color=\"textSecondary\">  آخر تحديث: { new Date(da.date).toLocaleDateString('en-GB')} </Typography>\r\n               <Typography style={{color:'white'}}>sssssssssssssssssssss </Typography>\r\n\r\n    </CardContent>\r\n\r\n</Grid>\r\n<Grid item component={Card}  md={4}  xs={12}  className={cx(styles.card,styles.negative)}>\r\n    <CardContent>\r\n        <Typography variant=\"h5\"   className={styles.ar} color=\"primary\">الحالات المستبعدة</Typography>\r\n        <Typography variant=\"body1\" style={{margin :'6px'}}>\r\n            <CountUp  start={0} end={da.negative} duration={2} separator=\" \"/> \r\n            </Typography> \r\n               <Typography color=\"textSecondary\"> آخر تحديث:  { new Date(da.date).toLocaleDateString('en-GB')} </Typography>\r\n               <Typography style={{color:'white'}}> sssssssssssssssss </Typography>\r\n\r\n    </CardContent>\r\n\r\n</Grid>\r\n</Grid>\r\n    </div>\r\n)\r\n}\r\nexport default CardT;","import React, { useState,useEffect} from 'react';\nimport './App.css';\nimport {Cards,Chart,FooterPage,CardT} from './components';\nimport {fetchData} from './api';\n\nimport styles from './App.css';\nimport imageCovid from './images/corona.jpg'; \n\nclass App extends React.Component{\n  state={\n    data:{},\n    country:'',\n  \n  }\n \n\n  render(){\n   \n\n    //console.log(\"okay\")\n    return(\n      <div className=\"container\">\n        <div className=\"con\">\n        الحالة الوبائية بالمغرب\n        </div>\n <img className=\"imgContainer\" src={imageCovid} alt=\"covid\" />\n <CardT/>\n <hr/>\n<Cards/>\n\n<Chart />\n<div className=\"margi\">\n\n<FooterPage   />\n</div>\n\n      </div>\n    )\n  }\n}\nexport  default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render (<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2j5f8\",\"card\":\"Cards_card__1IBmk\",\"infected\":\"Cards_infected__1CSFo\",\"ar\":\"Cards_ar__2qcWy\",\"recovered\":\"Cards_recovered__X11hD\",\"deaths\":\"Cards_deaths__ujYXg\",\"negative\":\"Cards_negative__1nao_\"};"],"sourceRoot":""}